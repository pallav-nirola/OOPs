Q 1
#include <iostream>
using namespace std;
class triangle
{
private:
    float base;
    float height;

public:
    triangle(float b, float h)
    {
        base = b;
        height = h;
    }
    int get_area() const
    {
        return (base * height) / 2;
    }
    static triangle compareArea(triangle &tri1, triangle &tri2)
    {
        if (tri1.get_area() >= tri2.get_area())
        {
            return tri1;
        }
        else
        {
            return tri2;
        }
    }
    void display() const
    {
cout << "Base: " << base << ", Height: " << height
             << ", Area: " << get_area() << endl;
    }
};
int main()
{
    triangle t1(10, 60);
    triangle t2(98, 99);
    triangle larger = triangle ::   compareArea(t1,t2);
   larger.display();

    return 0;}
Q 2
#include<iostream>
using namespace std;
struct ginti{
int customers;
int items;

};
int main() {
    ginti count = {12,20};
    cout<<count.items<<endl;
    cout<<count.customers<<endl;
    return 0;
}
// using class if was allowed;
#include <iostream>
using namespace std;


class ginti
{
    public:
    static int customer;
    static int items;
};
int ginti ::customer = 20;
int ginti ::items = 12;
int main()
{
    cout << ginti::items << endl;
    cout << ginti::customer << endl;
    return 0;
}

